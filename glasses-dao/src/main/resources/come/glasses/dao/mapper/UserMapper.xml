<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="come.glasses.dao.mapper.UserMapper">
    <resultMap id="BaseResultMap" type="come.glasses.entity.User">
        <constructor>
            <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="name" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="code" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="sex" javaType="java.lang.Byte" jdbcType="TINYINT"/>
            <arg column="phone" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="role_id" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="remarks" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="password_encrypted" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="current_token" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="created_at" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
            <arg column="updated_at" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        </constructor>
    </resultMap>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="come.glasses.entity.User">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into user (name, code, sex,
        phone, role_id, remarks,
        password_encrypted, current_token, created_at,
        updated_at)
        values (#{name,jdbcType=VARCHAR}, #{code,jdbcType=VARCHAR}, #{sex,jdbcType=TINYINT},
        #{phone,jdbcType=VARCHAR}, #{roleId,jdbcType=INTEGER}, #{remarks,jdbcType=VARCHAR},
        #{passwordEncrypted,jdbcType=VARCHAR}, #{currentToken,jdbcType=VARCHAR}, #{createdAt,jdbcType=TIMESTAMP},
        #{updatedAt,jdbcType=TIMESTAMP})
    </insert>
    <update id="updateByPrimaryKey" parameterType="come.glasses.entity.User">
    update user
    set name = #{name,jdbcType=VARCHAR},
      code = #{code,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=TINYINT},
      phone = #{phone,jdbcType=VARCHAR},
      role_id = #{roleId,jdbcType=INTEGER},
      remarks = #{remarks,jdbcType=VARCHAR},
      password_encrypted = #{passwordEncrypted,jdbcType=VARCHAR},
      current_token = #{currentToken,jdbcType=VARCHAR},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, name, code, sex, phone, role_id, remarks, password_encrypted, current_token, 
    created_at, updated_at
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
    <select id="selectAll" resultMap="BaseResultMap">
    select id, name, code, sex, phone, role_id, remarks, password_encrypted, current_token,
    created_at, updated_at
    from user limit #{input.offset}, #{input.pageSize}
  </select>

    <select id="selectByLoginStr" resultMap="BaseResultMap">
      select id, name, code, sex, phone, role_id, remarks, password_encrypted, current_token,
      created_at, updated_at
      from user where code = #{code,jdbcType=VARCHAR}
    </select>

    <select id="countOperationLogs" resultType="java.lang.Integer">
        select count(*) from user
    </select>
</mapper>