<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="come.glasses.dao.mapper.UserMapper">
    <resultMap id="BaseResultMap" type="come.glasses.entity.User">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="sex" column="sex"/>
        <result property="phone" column="phone"/>
        <result property="roleId" column="role_id"/>
        <result property="roleName" column="role_name"/>
        <result property="remarks" column="remarks"/>
        <result property="passwordEncrypted" column="password_encrypted"/>
        <result property="currentToken" column="current_token"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
    </resultMap>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="come.glasses.entity.User">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into user (name, sex,
        phone, role_id, remarks,
        password_encrypted, current_token)
        values (#{name,jdbcType=VARCHAR}, #{sex,jdbcType=TINYINT},
        #{phone,jdbcType=VARCHAR}, #{roleId,jdbcType=INTEGER}, #{remarks,jdbcType=VARCHAR},
        #{passwordEncrypted,jdbcType=VARCHAR}, #{currentToken,jdbcType=VARCHAR})
    </insert>
    <update id="updateByPrimaryKey" parameterType="come.glasses.entity.User">
    update user
    set name = #{name,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=TINYINT},
      phone = #{phone,jdbcType=VARCHAR},
      role_id = #{roleId,jdbcType=INTEGER},
      remarks = #{remarks,jdbcType=VARCHAR},
      password_encrypted = #{passwordEncrypted,jdbcType=VARCHAR},
      current_token = #{currentToken,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select u.*, r.name as role_name
    from user u
    left join role r on r.id = u.role_id
    where u.id = #{id,jdbcType=INTEGER}
  </select>
    <select id="selectAll" resultMap="BaseResultMap">
        select id, name, sex, phone, role_id, remarks, password_encrypted, current_token,
        created_at, updated_at
        from user u where
        <if test="input.name != null">
            u.name like concat(#{input.name}, '%')
        </if>
        limit #{input.offset}, #{input.pageSize}
    </select>

    <select id="selectByLoginStr" resultMap="BaseResultMap">
      select u.*, r.name as role_name
    from user u
    left join role r on r.id = u.role_id
    where phone = #{phone,jdbcType=VARCHAR}
    </select>

    <select id="countOperationLogs" resultType="java.lang.Integer">
        select count(*) from user
    </select>
</mapper>